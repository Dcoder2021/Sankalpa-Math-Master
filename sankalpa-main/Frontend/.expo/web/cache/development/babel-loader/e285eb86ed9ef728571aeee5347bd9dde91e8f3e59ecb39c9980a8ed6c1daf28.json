{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Avatar, Divider, IconButton, Card, Text, Button, TextInput } from 'react-native-paper';\nimport Background1 from \"../components/background1\";\nimport { useNavigation } from '@react-navigation/core';\nimport axios from 'axios';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ResetPwd = function ResetPwd(_ref) {\n  var route = _ref.route;\n  var email = route.params.email;\n  var navigation = useNavigation();\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isKeyboardVisible = _useState2[0],\n    setKeyboardVisible = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    newPassword = _useState4[0],\n    setNewPassword = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    confirmPassword = _useState6[0],\n    setConfirmPassword = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    passwordMatchError = _useState8[0],\n    setPasswordMatchError = _useState8[1];\n  var _useState9 = useState(null),\n    _useState10 = _slicedToArray(_useState9, 2),\n    userId = _useState10[0],\n    setUserId = _useState10[1];\n  var checkEmailInApi = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var endpoints = ['http://192.168.8.147:8000/api/studentby', 'http://192.168.8.147:8000/api/teachersby'];\n      for (var endpoint of endpoints) {\n        try {\n          var response = yield axios.post(endpoint, {\n            Email: email\n          });\n          var data = response.data;\n          if (data && Array.isArray(data) && data.length > 0) {\n            console.log(\"User with email \" + email + \" found in \" + endpoint);\n            setUserId(data[0]._id);\n            setPasswordMatchError(false);\n            return endpoint;\n          }\n        } catch (error) {\n          console.error('Error checking email:', error);\n        }\n      }\n      return null;\n    });\n    return function checkEmailInApi() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    var keyboardDidShowListener = Keyboard.addListener('keyboardDidShow', function () {\n      setKeyboardVisible(true);\n    });\n    var keyboardDidHideListener = Keyboard.addListener('keyboardDidHide', function () {\n      setKeyboardVisible(false);\n    });\n    return function () {\n      keyboardDidShowListener.remove();\n      keyboardDidHideListener.remove();\n    };\n  }, []);\n  useEffect(function () {\n    var checkUserExistence = function () {\n      var _ref3 = _asyncToGenerator(function* () {\n        var emailEndpoint = yield checkEmailInApi();\n        if (!emailEndpoint) {\n          Alert.alert('User Not Found', 'The provided email does not exist. Please try again.');\n        }\n      });\n      return function checkUserExistence() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n    checkUserExistence();\n  }, []);\n  var handleNextButton = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      if (newPassword !== confirmPassword) {\n        setPasswordMatchError(true);\n      } else {\n        setPasswordMatchError(false);\n        var emailEndpoint = yield checkEmailInApi();\n        if (emailEndpoint) {\n          yield handleUpdatePassword(emailEndpoint);\n        }\n      }\n    });\n    return function handleNextButton() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var handleUpdatePassword = function () {\n    var _ref5 = _asyncToGenerator(function* (emailEndpoint) {\n      if (userId) {\n        try {\n          var endpoint = emailEndpoint.includes('teachersby') ? 'http://192.168.8.147:8000/api/teacher/update' : 'http://192.168.8.147:8000/api/student/update';\n          var response = yield axios.put(endpoint + \"/\" + userId, {\n            password: newPassword\n          });\n          console.log('Password updated successfully!');\n          navigation.navigate('FirstPage');\n        } catch (error) {\n          console.error('Error updating password:', error);\n        }\n      } else {\n        console.error('User ID not found. Unable to update password.');\n      }\n    });\n    return function handleUpdatePassword(_x) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var isPasswordStrong = function isPasswordStrong(password) {\n    var strongPasswordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\n    return strongPasswordRegex.test(password);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [!isKeyboardVisible && _jsx(Background1, {}), _jsxs(View, {\n      style: styles.InputBox,\n      children: [_jsx(Text, {\n        style: styles.headerText,\n        children: \"Reset your password\"\n      }), _jsxs(View, {\n        style: styles.input,\n        children: [_jsxs(View, {\n          style: styles.textFeild,\n          children: [_jsx(Text, {\n            style: {\n              textAlign: 'left'\n            },\n            variant: \"titleMedium\",\n            children: \"New Password\"\n          }), _jsx(TextInput, {\n            style: {\n              width: 250\n            },\n            mode: \"outlined\",\n            outlineColor: \"#000\",\n            label: \"\",\n            secureTextEntry: true,\n            value: newPassword,\n            onChangeText: setNewPassword\n          }), newPassword && !isPasswordStrong(newPassword) && _jsx(Text, {\n            style: {\n              textAlign: 'left',\n              color: '#ec0b43'\n            },\n            variant: \"titleMedium\",\n            children: \"Not a strong password\"\n          })]\n        }), _jsxs(View, {\n          style: styles.textFeild,\n          children: [_jsx(Text, {\n            style: {\n              textAlign: 'left'\n            },\n            variant: \"titleMedium\",\n            children: \"Confirm Password\"\n          }), _jsx(TextInput, {\n            style: {\n              width: 250\n            },\n            mode: \"outlined\",\n            outlineColor: \"#000\",\n            label: \"\",\n            secureTextEntry: true,\n            value: confirmPassword,\n            onChangeText: setConfirmPassword\n          }), passwordMatchError && _jsx(Text, {\n            style: {\n              textAlign: 'left',\n              color: '#ec0b43'\n            },\n            variant: \"titleMedium\",\n            children: \"Passwords don't match\"\n          })]\n        })]\n      }), _jsxs(View, {\n        style: styles.buttonBox,\n        children: [_jsx(Button, {\n          style: styles.button,\n          textColor: \"#ffff\",\n          mode: \"contained\",\n          onPress: handleNextButton,\n          children: \"Next\"\n        }), _jsx(View, {\n          style: styles.row\n        })]\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  InputBox: {\n    height: 500,\n    justifyContent: 'space-around',\n    alignItems: 'center',\n    margin: 20,\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  headerText: {\n    height: 50,\n    color: \"#121212\",\n    fontSize: 24,\n    margin: 20\n  },\n  input: {\n    textAlign: 'left',\n    height: 300,\n    marginLeft: 10,\n    marginRight: 10,\n    justifyContent: 'space-around',\n    alignItems: 'center',\n    marginBottom: 20,\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  textFeild: {\n    textAlign: 'left',\n    height: 90,\n    marginLeft: 10,\n    marginRight: 10\n  },\n  buttonBox: {\n    height: 100,\n    width: 300,\n    justifyContent: 'space-around',\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  button: {\n    width: 250,\n    height: 50,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  row: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-evenly',\n    alignItems: 'center',\n    width: 150\n  },\n  textButton: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    textAlign: 'center'\n  }\n});\nexport default ResetPwd;","map":{"version":3,"names":["React","useState","useEffect","StyleSheet","View","Keyboard","Alert","Avatar","Divider","IconButton","Card","Text","Button","TextInput","Background1","useNavigation","axios","jsx","_jsx","jsxs","_jsxs","ResetPwd","_ref","route","email","params","navigation","_useState","_useState2","_slicedToArray","isKeyboardVisible","setKeyboardVisible","_useState3","_useState4","newPassword","setNewPassword","_useState5","_useState6","confirmPassword","setConfirmPassword","_useState7","_useState8","passwordMatchError","setPasswordMatchError","_useState9","_useState10","userId","setUserId","checkEmailInApi","_ref2","_asyncToGenerator","endpoints","endpoint","response","post","Email","data","Array","isArray","length","console","log","_id","error","apply","arguments","keyboardDidShowListener","addListener","keyboardDidHideListener","remove","checkUserExistence","_ref3","emailEndpoint","alert","handleNextButton","_ref4","handleUpdatePassword","_ref5","includes","put","password","navigate","_x","isPasswordStrong","strongPasswordRegex","test","style","styles","container","children","InputBox","headerText","input","textFeild","textAlign","variant","width","mode","outlineColor","label","secureTextEntry","value","onChangeText","color","buttonBox","button","textColor","onPress","row","create","flex","height","justifyContent","alignItems","margin","display","flexDirection","fontSize","marginLeft","marginRight","marginBottom","textButton"],"sources":["F:/SLIIT/year 04/Final edited research/Dyscalculia-main/Sankalpa/screens/ResetPassword.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { StyleSheet, View,Keyboard,Alert } from \"react-native\";\nimport { Avatar, Divider, IconButton, Card, Text, Button, TextInput } from 'react-native-paper';\nimport Background1 from '../components/background1';\nimport { useNavigation } from '@react-navigation/core';\n\nimport axios from 'axios';\n\nconst ResetPwd = ({ route }) => {\n    const { email } = route.params;\n    const navigation = useNavigation();\n    const [isKeyboardVisible, setKeyboardVisible] = useState(false);\n    const [newPassword, setNewPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [passwordMatchError, setPasswordMatchError] = useState(false);\n    const [userId, setUserId] = useState(null);\n\n    const checkEmailInApi = async () => {\n        const endpoints = [\n            'http://192.168.8.147:8000/api/studentby',\n            'http://192.168.8.147:8000/api/teachersby'\n        ];\n\n        for (const endpoint of endpoints) {\n            try {\n                const response = await axios.post(endpoint, { Email: email });\n                const data = response.data;\n\n                if (data && Array.isArray(data) && data.length > 0) {\n                    // Email exists in this endpoint\n                    console.log(`User with email ${email} found in ${endpoint}`);\n                    setUserId(data[0]._id); // Assuming the user ID field is '_id', change it if needed\n                    setPasswordMatchError(false); // Clear password match error if any\n                    return endpoint; // Return the endpoint where the user was found\n                }\n            } catch (error) {\n                console.error('Error checking email:', error);\n            }\n        }\n\n        return null; // If no user found in any endpoint\n    };\n\n    useEffect(() => {\n        const keyboardDidShowListener = Keyboard.addListener('keyboardDidShow', () => {\n            setKeyboardVisible(true);\n        });\n        const keyboardDidHideListener = Keyboard.addListener('keyboardDidHide', () => {\n            setKeyboardVisible(false);\n        });\n\n        return () => {\n            keyboardDidShowListener.remove();\n            keyboardDidHideListener.remove();\n        };\n    }, []);\n\n    useEffect(() => {\n        const checkUserExistence = async () => {\n            const emailEndpoint = await checkEmailInApi(); // Wait for the email check to complete\n            if (!emailEndpoint) {\n                // User does not exist, show alert or perform any other actions\n                Alert.alert('User Not Found', 'The provided email does not exist. Please try again.');\n                // You can navigate back to the previous screen or take any other action.\n            }\n        };\n\n        checkUserExistence();\n    }, []);\n\n    const handleNextButton = async () => {\n        if (newPassword !== confirmPassword) {\n            setPasswordMatchError(true);\n        } else {\n            setPasswordMatchError(false);\n            const emailEndpoint = await checkEmailInApi(); // Wait for the email check to complete\n            if (emailEndpoint) {\n                await handleUpdatePassword(emailEndpoint); // Call the function to update the password\n            }\n        }\n    };\n\n    const handleUpdatePassword = async (emailEndpoint) => {\n        if (userId) {\n            try {\n                const endpoint = emailEndpoint.includes('teachersby')\n                    ? 'http://192.168.8.147:8000/api/teacher/update'\n                    : 'http://192.168.8.147:8000/api/student/update';\n\n                const response = await axios.put(`${endpoint}/${userId}`, { password: newPassword });\n                console.log('Password updated successfully!');\n                navigation.navigate('FirstPage');\n                // You can perform any additional actions after updating the password\n                // For example, you can navigate to a success page or display a success message.\n            } catch (error) {\n                console.error('Error updating password:', error);\n                // Handle errors if the password update fails\n            }\n        } else {\n            console.error('User ID not found. Unable to update password.');\n        }\n    };\n\n    const isPasswordStrong = (password) => {\n        // Check if the password contains at least one uppercase letter, one lowercase letter, one number, and one special character\n        const strongPasswordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\n        return strongPasswordRegex.test(password);\n    };\n\n    return (\n        <View style={styles.container}>\n            {!isKeyboardVisible && <Background1 />}\n\n            <View style={styles.InputBox}>\n                <Text style={styles.headerText}>Reset your password</Text>\n                <View style={styles.input}>\n                    <View style={styles.textFeild}>\n                        <Text style={{ textAlign: 'left' }} variant=\"titleMedium\">\n                            New Password\n                        </Text>\n                        <TextInput\n                            style={{ width: 250 }}\n                            mode=\"outlined\"\n                            outlineColor=\"#000\"\n                            label=\"\"\n                            secureTextEntry={true}\n                            value={newPassword}\n                            onChangeText={setNewPassword}\n                        />\n                        {newPassword && !isPasswordStrong(newPassword) && (\n                            <Text style={{ textAlign: 'left', color: '#ec0b43' }} variant=\"titleMedium\">\n                                Not a strong password\n                            </Text>\n                        )}\n                    </View>\n                    <View style={styles.textFeild}>\n                        <Text style={{ textAlign: 'left' }} variant=\"titleMedium\">\n                            Confirm Password\n                        </Text>\n                        <TextInput\n                            style={{ width: 250 }}\n                            mode=\"outlined\"\n                            outlineColor=\"#000\"\n                            label=\"\"\n                            secureTextEntry={true}\n                            value={confirmPassword}\n                            onChangeText={setConfirmPassword}\n                        />\n                        {passwordMatchError && (\n                            <Text style={{ textAlign: 'left', color: '#ec0b43' }} variant=\"titleMedium\">\n                                Passwords don't match\n                            </Text>\n                        )}\n\n                    </View>\n                </View>\n\n                <View style={styles.buttonBox}>\n                    <Button style={styles.button} textColor=\"#ffff\" mode=\"contained\" onPress={handleNextButton}>\n                        Next\n                    </Button>\n                    <View style={styles.row}></View>\n                </View>\n            </View>\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1\n    },\n\n\n\n    InputBox: {\n        height: 500,\n        // backgroundColor: '#5A5A66',\n        justifyContent: 'space-around',\n        alignItems: 'center',\n        margin: 20,\n        display: 'flex',\n        flexDirection: 'column'\n\n    },\n    headerText: {\n        height: 50,\n\n        color: \"#121212\",\n        fontSize: 24,\n        margin: 20,\n        // backgroundColor: '#ACEB98'\n\n    },\n\n    input: {\n\n        textAlign: 'left',\n        height: 300,\n        marginLeft: 10,\n        marginRight: 10,\n        // backgroundColor: '#A4C2A8',\n        justifyContent: 'space-around',\n        alignItems: 'center',\n        marginBottom: 20,\n        display: 'flex',\n        flexDirection: 'column'\n    },\n    textFeild: {\n\n        textAlign: 'left',\n        height: 90,\n        marginLeft: 10,\n        marginRight: 10,\n        // backgroundColor: '#A2E3C4'\n\n    },\n    buttonBox: {\n        height: 100,\n        width: 300,\n        // backgroundColor: '#000',\n        justifyContent: 'space-around',\n        alignItems: 'center',\n\n        display: 'flex',\n        flexDirection: 'column'\n\n    },\n    button: {\n        width: 250, height: 50, justifyContent: 'center', alignItems: 'center',\n    },\n    row: {\n        // backgroundColor: '#000',\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-evenly',\n        alignItems: 'center',\n        width: 150,\n\n\n    },\n    textButton: {\n        justifyContent: 'center', alignItems: 'center', textAlign: 'center',\n    }\n});\n\nexport default ResetPwd;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}