{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport { Avatar, Divider, IconButton, Card, Text, Button, TextInput } from 'react-native-paper';\nimport Background1 from \"../components/background1\";\nimport { useNavigation } from '@react-navigation/core';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar EnterEmailAddressPage = function EnterEmailAddressPage() {\n  var navigation = useNavigation();\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isKeyboardVisible = _useState2[0],\n    setKeyboardVisible = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    email = _useState4[0],\n    setEmail = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    error = _useState6[0],\n    setError = _useState6[1];\n  useEffect(function () {\n    var keyboardDidShowListener = Keyboard.addListener('keyboardDidShow', function () {\n      setKeyboardVisible(true);\n    });\n    var keyboardDidHideListener = Keyboard.addListener('keyboardDidHide', function () {\n      setKeyboardVisible(false);\n    });\n    return function () {\n      keyboardDidShowListener.remove();\n      keyboardDidHideListener.remove();\n    };\n  }, []);\n  var handleNextButtonPress = function handleNextButtonPress() {\n    if (!email) {\n      setError('Email address cannot be empty.');\n    } else if (!validateEmail(email)) {\n      setError('Invalid email address.');\n    } else {\n      setError('');\n      navigation.navigate('VerifyCode', {\n        email: email\n      });\n    }\n  };\n  var validateEmail = function validateEmail(email) {\n    var emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailPattern.test(email);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [!isKeyboardVisible && _jsx(Background1, {}), _jsxs(View, {\n      style: styles.InputBox,\n      children: [_jsx(Text, {\n        style: styles.headerText,\n        children: \"Enter your Email address\"\n      }), _jsx(View, {\n        style: styles.input,\n        children: _jsxs(View, {\n          style: styles.textFeild,\n          children: [_jsx(Text, {\n            style: {\n              textAlign: 'left'\n            },\n            variant: \"titleMedium\",\n            children: \"E-mail\"\n          }), _jsx(TextInput, {\n            style: {\n              width: 250\n            },\n            mode: \"outlined\",\n            outlineColor: \"#000\",\n            label: \"\",\n            value: email,\n            onChangeText: function onChangeText(text) {\n              return setEmail(text);\n            }\n          }), error ? _jsx(Text, {\n            style: {\n              color: 'red'\n            },\n            children: error\n          }) : null]\n        })\n      }), _jsxs(View, {\n        style: styles.buttonBox,\n        children: [_jsx(Button, {\n          style: styles.button,\n          textColor: \"#ffff\",\n          mode: \"contained\",\n          onPress: handleNextButtonPress,\n          children: \"Next\"\n        }), _jsx(View, {\n          style: styles.row\n        })]\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  InputBox: {\n    height: 500,\n    justifyContent: 'space-around',\n    alignItems: 'center',\n    margin: 20,\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  headerText: {\n    height: 50,\n    color: \"#121212\",\n    fontSize: 24,\n    margin: 20\n  },\n  input: {\n    textAlign: 'left',\n    height: 300,\n    marginLeft: 10,\n    marginRight: 10,\n    justifyContent: 'space-around',\n    alignItems: 'center',\n    marginBottom: 20,\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  textFeild: {\n    textAlign: 'left',\n    height: 90,\n    marginLeft: 10,\n    marginRight: 10\n  },\n  buttonBox: {\n    height: 100,\n    width: 300,\n    justifyContent: 'space-around',\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  button: {\n    width: 250,\n    height: 50,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  row: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-evenly',\n    alignItems: 'center',\n    width: 150\n  },\n  textButton: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    textAlign: 'center'\n  }\n});\nexport default EnterEmailAddressPage;","map":{"version":3,"names":["React","useState","useEffect","StyleSheet","View","Keyboard","Avatar","Divider","IconButton","Card","Text","Button","TextInput","Background1","useNavigation","jsx","_jsx","jsxs","_jsxs","EnterEmailAddressPage","navigation","_useState","_useState2","_slicedToArray","isKeyboardVisible","setKeyboardVisible","_useState3","_useState4","email","setEmail","_useState5","_useState6","error","setError","keyboardDidShowListener","addListener","keyboardDidHideListener","remove","handleNextButtonPress","validateEmail","navigate","emailPattern","test","style","styles","container","children","InputBox","headerText","input","textFeild","textAlign","variant","width","mode","outlineColor","label","value","onChangeText","text","color","buttonBox","button","textColor","onPress","row","create","flex","height","justifyContent","alignItems","margin","display","flexDirection","fontSize","marginLeft","marginRight","marginBottom","textButton"],"sources":["F:/SLIIT/year 04/Final edited research/Dyscalculia-main/Sankalpa/screens/EnterEmailAddressPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { StyleSheet, View ,Keyboard} from \"react-native\";\nimport { Avatar, Divider, IconButton, Card, Text, Button, TextInput } from 'react-native-paper';\nimport Background1 from '../components/background1';\nimport { useNavigation } from '@react-navigation/core';\n\nconst EnterEmailAddressPage = () => {\n    const navigation = useNavigation();\n    const [isKeyboardVisible, setKeyboardVisible] = useState(false);\n    const [email, setEmail] = useState('');\n    const [error, setError] = useState('');\n\n    useEffect(() => {\n        const keyboardDidShowListener = Keyboard.addListener('keyboardDidShow', () => {\n            setKeyboardVisible(true);\n        });\n        const keyboardDidHideListener = Keyboard.addListener('keyboardDidHide', () => {\n            setKeyboardVisible(false);\n        });\n\n        return () => {\n            keyboardDidShowListener.remove();\n            keyboardDidHideListener.remove();\n        };\n    }, []);\n\n    const handleNextButtonPress = () => {\n        if (!email) {\n            setError('Email address cannot be empty.');\n        } else if (!validateEmail(email)) {\n            setError('Invalid email address.');\n        } else {\n            setError(''); // Reset the error message\n            navigation.navigate('VerifyCode', { email });\n        }\n    };\n\n    const validateEmail = (email) => {\n        const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        return emailPattern.test(email);\n    };\n\n    return (\n        <View style={styles.container}>\n            {!isKeyboardVisible && <Background1 />}\n\n            <View style={styles.InputBox}>\n                <Text style={styles.headerText}>Enter your Email address</Text>\n                <View style={styles.input}>\n                    <View style={styles.textFeild}>\n                        <Text style={{ textAlign: 'left' }} variant=\"titleMedium\">\n                            E-mail\n                        </Text>\n                        <TextInput\n                            style={{ width: 250 }}\n                            mode=\"outlined\"\n                            outlineColor=\"#000\"\n                            label=\"\"\n                            value={email}\n                            onChangeText={(text) => setEmail(text)}\n                        />\n                        {error ? <Text style={{ color: 'red' }}>{error}</Text> : null}\n                    </View>\n                </View>\n\n                <View style={styles.buttonBox}>\n                    <Button style={styles.button} textColor=\"#ffff\" mode=\"contained\" onPress={handleNextButtonPress}>\n                        Next\n                    </Button>\n                    <View style={styles.row}></View>\n                </View>\n            </View>\n        </View>\n    );\n};\n\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1\n    },\n\n\n\n    InputBox: {\n        height: 500,\n        // backgroundColor: '#5A5A66',\n        justifyContent: 'space-around',\n        alignItems: 'center',\n        margin: 20,\n        display: 'flex',\n        flexDirection: 'column'\n\n    },\n    headerText: {\n        height: 50,\n\n        color: \"#121212\",\n        fontSize: 24,\n        margin: 20,\n        // backgroundColor: '#ACEB98'\n\n    },\n\n    input: {\n\n        textAlign: 'left',\n        height: 300,\n        marginLeft: 10,\n        marginRight: 10,\n        // backgroundColor: '#A4C2A8',\n        justifyContent: 'space-around',\n        alignItems: 'center',\n        marginBottom: 20,\n        display: 'flex',\n        flexDirection: 'column'\n    },\n    textFeild: {\n\n        textAlign: 'left',\n        height: 90,\n        marginLeft: 10,\n        marginRight: 10,\n        // backgroundColor: '#A2E3C4'\n\n    },\n    buttonBox: {\n        height: 100,\n        width: 300,\n        // backgroundColor: '#000',\n        justifyContent: 'space-around',\n        alignItems: 'center',\n\n        display: 'flex',\n        flexDirection: 'column'\n\n    },\n    button: {\n        width: 250, height: 50, justifyContent: 'center', alignItems: 'center',\n    },\n    row: {\n// backgroundColor: '#000',\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-evenly',\n        alignItems: 'center',\nwidth:150,\n\n\n    },\n    textButton: {\n        justifyContent: 'center', alignItems: 'center', textAlign: 'center',\n    }\n});\n\nexport default EnterEmailAddressPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}