{"ast":null,"code":"import React, { useEffect, useState } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useNavigation } from '@react-navigation/core';\nimport * as ScreenOrientation from 'expo-screen-orientation';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Loader = function Loader() {\n  var navigation = useNavigation();\n  useEffect(function () {\n    var timer = setTimeout(function () {\n      ScreenOrientation.lockAsync(ScreenOrientation.OrientationLock.PORTRAIT);\n      navigation.navigate('SNavBar');\n    }, 300);\n    return function () {\n      return clearTimeout(timer);\n    };\n  }, [navigation]);\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: _jsx(ActivityIndicator, {\n      animating: true,\n      size: 150,\n      color: \"#002060\"\n    })\n  });\n};\nexport default Loader;","map":{"version":3,"names":["React","useEffect","useState","ActivityIndicator","View","useNavigation","ScreenOrientation","jsx","_jsx","Loader","navigation","timer","setTimeout","lockAsync","OrientationLock","PORTRAIT","navigate","clearTimeout","style","flex","justifyContent","alignItems","children","animating","size","color"],"sources":["F:/SLIIT/year 04/Final edited research/Dyscalculia-main/Sankalpa/components/loader.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { ActivityIndicator, View } from 'react-native';\nimport { useNavigation } from '@react-navigation/core';\nimport * as ScreenOrientation from 'expo-screen-orientation';\n\nconst Loader = () => {\n    const navigation = useNavigation();\n\n    useEffect(() => {\n        // Wait for 1 minute and then navigate to another page\n        const timer = setTimeout(() => {\n            // Set orientation to portrait before navigating to the next page\n            ScreenOrientation.lockAsync(ScreenOrientation.OrientationLock.PORTRAIT);\n\n            // Navigate to the 'StuResults' page\n            navigation.navigate('SNavBar');\n        }, 300); // 300 milliseconds for demonstration purposes; replace with 60000 for 1 minute\n\n        return () => clearTimeout(timer);\n    }, [navigation]);\n    return (\n        <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n            <ActivityIndicator animating={true} size={150} color='#002060' />\n        </View>\n    );\n};\n\nexport default Loader;\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,iBAAA;AAAA,OAAAC,IAAA;AAEnD,SAASC,aAAa,QAAQ,wBAAwB;AACtD,OAAO,KAAKC,iBAAiB,MAAM,yBAAyB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAE7D,IAAMC,MAAM,GAAG,SAATA,MAAMA,CAAA,EAAS;EACjB,IAAMC,UAAU,GAAGL,aAAa,CAAC,CAAC;EAElCJ,SAAS,CAAC,YAAM;IAEZ,IAAMU,KAAK,GAAGC,UAAU,CAAC,YAAM;MAE3BN,iBAAiB,CAACO,SAAS,CAACP,iBAAiB,CAACQ,eAAe,CAACC,QAAQ,CAAC;MAGvEL,UAAU,CAACM,QAAQ,CAAC,SAAS,CAAC;IAClC,CAAC,EAAE,GAAG,CAAC;IAEP,OAAO;MAAA,OAAMC,YAAY,CAACN,KAAK,CAAC;IAAA;EACpC,CAAC,EAAE,CAACD,UAAU,CAAC,CAAC;EAChB,OACIF,IAAA,CAACJ,IAAI;IAACc,KAAK,EAAE;MAAEC,IAAI,EAAE,CAAC;MAAEC,cAAc,EAAE,QAAQ;MAAEC,UAAU,EAAE;IAAS,CAAE;IAAAC,QAAA,EACrEd,IAAA,CAACL,iBAAiB;MAACoB,SAAS,EAAE,IAAK;MAACC,IAAI,EAAE,GAAI;MAACC,KAAK,EAAC;IAAS,CAAE;EAAC,CAC/D,CAAC;AAEf,CAAC;AAED,eAAehB,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}