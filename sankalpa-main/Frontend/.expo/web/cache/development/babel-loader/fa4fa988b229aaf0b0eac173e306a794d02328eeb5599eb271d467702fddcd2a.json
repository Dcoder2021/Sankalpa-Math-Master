{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Avatar, Button, Divider, IconButton, TextInput } from 'react-native-paper';\nimport AppBa2 from \"../components/appBar2\";\nimport { Card } from 'react-native-paper';\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar StudentList = function StudentList(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    students = _useState2[0],\n    setStudents = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    searchQuery = _useState4[0],\n    setSearchQuery = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    selectedStudentId = _useState6[0],\n    setSelectedStudentId = _useState6[1];\n  useEffect(function () {\n    var fetchData = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        try {\n          var currentTeacherID = yield AsyncStorage.getItem('CurrentTeacherID');\n          if (currentTeacherID) {\n            var response = yield axios.post('http://192.168.1.100:8000/api/studentby', {\n              TeacherID: currentTeacherID,\n              LevelStatus: 'High'\n            });\n            setStudents(response.data);\n          } else {\n            console.error('CurrentTeacherID not found in cache.');\n          }\n        } catch (error) {\n          console.error('Error fetching student data:', error);\n        }\n      });\n      return function fetchData() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    fetchData();\n  }, []);\n  var handlePredictSkillLevel = function handlePredictSkillLevel(studentId) {\n    console.log('Selected Student ID:', studentId);\n    navigation.navigate('GetStartedPage', {\n      studentId: studentId\n    });\n  };\n  var filteredStudents = students.filter(function (student) {\n    return student.Name.toLowerCase().includes(searchQuery.toLowerCase());\n  });\n  function formatDate(dateString) {\n    var date = new Date(dateString);\n    var year = date.getFullYear();\n    var month = String(date.getMonth() + 1).padStart(2, '0');\n    var day = String(date.getDate()).padStart(2, '0');\n    return year + \".\" + month + \".\" + day;\n  }\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(StatusBar, {\n      style: \"inverted\"\n    }), _jsx(AppBa2, {\n      title: 'Student List '\n    }), _jsxs(View, {\n      style: styles.box1,\n      children: [_jsx(View, {\n        style: styles.box2,\n        children: _jsx(TextInput, {\n          placeholder: \"Search student name here\",\n          value: searchQuery,\n          onChangeText: function onChangeText(query) {\n            return setSearchQuery(query);\n          },\n          right: _jsx(TextInput.Icon, {\n            name: \"close\",\n            onPress: function onPress() {\n              return setSearchQuery('');\n            }\n          }),\n          left: _jsx(TextInput.Icon, {\n            name: \"account-search\",\n            onPress: function onPress() {}\n          })\n        })\n      }), _jsx(View, {\n        style: styles.box3,\n        children: _jsx(ScrollView, {\n          children: filteredStudents.map(function (student) {\n            return _jsxs(Card, {\n              mode: \"outlined\",\n              style: styles.card,\n              children: [_jsx(Card.Title, {\n                title: student.Name,\n                subtitle: student.StageStatus ? 'Middle School' : 'Primary School',\n                left: function left(props) {\n                  return _jsx(Avatar.Text, _objectSpread(_objectSpread({}, props), {}, {\n                    label: student.Name[0]\n                  }));\n                },\n                right: function right(props) {\n                  return _jsx(IconButton, _objectSpread(_objectSpread({}, props), {}, {\n                    icon: \"dots-vertical\",\n                    onPress: function onPress() {}\n                  }));\n                }\n              }), _jsx(Divider, {}), _jsxs(Card.Content, {\n                children: [_jsxs(Text, {\n                  variant: \"headlineMedium\",\n                  children: [\"Dob: \", formatDate(student.Dob)]\n                }), _jsxs(Text, {\n                  variant: \"titleMedium\",\n                  children: [\"Email: \", student.Email]\n                })]\n              }), _jsx(Card.Actions, {\n                children: _jsx(Button, {\n                  textColor: \"#ffff\",\n                  mode: \"contained\",\n                  onPress: function onPress() {\n                    return handlePredictSkillLevel(student._id);\n                  },\n                  children: \"Predict Skill Level\"\n                })\n              })]\n            }, student._id);\n          })\n        })\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  margin: {\n    margin: 18\n  },\n  card: {\n    marginTop: 15\n  },\n  container: {\n    flex: 1\n  },\n  box1: {\n    marginTop: 18,\n    marginLeft: 23,\n    marginRight: 23,\n    justifyContent: 'center',\n    alignContent: 'center'\n  },\n  box2: {\n    marginTop: 20,\n    height: 50,\n    backgroundColor: '#ECE6F0',\n    borderRadius: 20\n  },\n  box3: {\n    marginTop: 30,\n    height: 550\n  },\n  Headding: {\n    fontSize: 19\n  }\n});\nexport default StudentList;","map":{"version":3,"names":["StatusBar","StyleSheet","View","Text","ScrollView","Avatar","Button","Divider","IconButton","TextInput","AppBa2","Card","React","useState","useEffect","axios","AsyncStorage","jsx","_jsx","jsxs","_jsxs","StudentList","_ref","navigation","_useState","_useState2","_slicedToArray","students","setStudents","_useState3","_useState4","searchQuery","setSearchQuery","_useState5","_useState6","selectedStudentId","setSelectedStudentId","fetchData","_ref2","_asyncToGenerator","currentTeacherID","getItem","response","post","TeacherID","LevelStatus","data","console","error","apply","arguments","handlePredictSkillLevel","studentId","log","navigate","filteredStudents","filter","student","Name","toLowerCase","includes","formatDate","dateString","date","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","style","styles","container","children","title","box1","box2","placeholder","value","onChangeText","query","right","Icon","name","onPress","left","box3","map","mode","card","Title","subtitle","StageStatus","props","_objectSpread","label","icon","Content","variant","Dob","Email","Actions","textColor","_id","create","margin","marginTop","flex","marginLeft","marginRight","justifyContent","alignContent","height","backgroundColor","borderRadius","Headding","fontSize"],"sources":["F:/SLIIT/year 04/Final edited research/Dyscalculia-main/Sankalpa/screens/StudentList.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, View, Text, ScrollView } from 'react-native';\nimport { Avatar, Button, Divider, IconButton, TextInput } from 'react-native-paper';\nimport AppBa2 from '../components/appBar2';\nimport { Card } from 'react-native-paper';\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst StudentList = ({ navigation }) => {\n    \n    const [students, setStudents] = useState([]); // This will hold the list of students\n    const [searchQuery, setSearchQuery] = useState(''); // This will hold the search query\n    const [selectedStudentId, setSelectedStudentId] = useState(null); // State to hold the selected student ID\n\n    // Function to fetch data from the API based on the default query\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                // Get the CurrentTeacherID from cache\n                const currentTeacherID = await AsyncStorage.getItem('CurrentTeacherID');\n\n                if (currentTeacherID) {\n                    const response = await axios.post('http://192.168.1.100:8000/api/studentby', {\n                        TeacherID: currentTeacherID,\n                        LevelStatus: 'High',\n                    });\n\n                    setStudents(response.data);\n                } else {\n                    console.error('CurrentTeacherID not found in cache.');\n                }\n            } catch (error) {\n                console.error('Error fetching student data:', error);\n            }\n        };\n\n        fetchData();\n    }, []);\n  \n    const handlePredictSkillLevel = (studentId) => {\n        console.log('Selected Student ID:', studentId);\n\n        navigation.navigate('GetStartedPage', { studentId });\n   \n    };\n    \n    // Function to filter the students based on the search query\n    const filteredStudents = students.filter((student) =>\n        student.Name.toLowerCase().includes(searchQuery.toLowerCase())\n    );\n\n    function formatDate(dateString) {\n        const date = new Date(dateString);\n        const year = date.getFullYear();\n        const month = String(date.getMonth() + 1).padStart(2, '0');\n        const day = String(date.getDate()).padStart(2, '0');\n        return `${year}.${month}.${day}`;\n    }\n\n    return (\n        <View style={styles.container}>\n            <StatusBar style=\"inverted\" />\n            <AppBa2 title={'Student List '} />\n            <View style={styles.box1}>\n                <View style={styles.box2}>\n                    <TextInput\n                        placeholder=\"Search student name here\"\n                        value={searchQuery}\n                        onChangeText={(query) => setSearchQuery(query)}\n                        right={<TextInput.Icon name=\"close\" onPress={() => setSearchQuery('')} />}\n                        left={<TextInput.Icon name=\"account-search\" onPress={() => { }} />}\n                    />\n                </View>\n                <View style={styles.box3}>\n                    <ScrollView>\n                        {/* Use FlatList to render the filtered student cards */}\n                        {filteredStudents.map((student) => (\n                            <Card key={student._id} mode=\"outlined\" style={styles.card}>\n                                <Card.Title\n                                    title={student.Name}\n                                    subtitle={student.StageStatus ? 'Middle School' : 'Primary School'}\n                                    left={(props) => <Avatar.Text {...props} label={student.Name[0]} />}\n                                    right={(props) => <IconButton {...props} icon=\"dots-vertical\" onPress={() => { }} />}\n                                />\n                                <Divider />\n                                <Card.Content>\n                                    <Text variant=\"headlineMedium\">Dob: {formatDate(student.Dob)}</Text>\n                                    <Text variant=\"titleMedium\">Email: {student.Email}</Text>\n                                    {/* Display any other student details here */}\n                                </Card.Content>\n                                <Card.Actions>\n                                    <Button textColor=\"#ffff\" mode=\"contained\" onPress={() => handlePredictSkillLevel(student._id)}>\n                                        Predict Skill Level\n                                    </Button>\n                                </Card.Actions>\n                            </Card>\n                        ))}\n                    </ScrollView>\n                </View>\n            </View>\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    margin: {\n        margin: 18\n    },\n    card:{ marginTop:15},\n    container: {\n        flex: 1,\n\n\n    },\n    box1: {\n        marginTop: 18,\n        marginLeft: 23,\n        marginRight: 23,\n        justifyContent: 'center',\n        alignContent: 'center',\n    },\n    box2: {\n        marginTop:20,\n        height: 50,\n        backgroundColor:'#ECE6F0'\n        ,borderRadius:20\n    },\n    box3: {\n        marginTop: 30,\n\n        height: 550\n\n    },\n    Headding: {\n        fontSize: 19,\n\n    },\n\n\n\n});\n\nexport default StudentList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}